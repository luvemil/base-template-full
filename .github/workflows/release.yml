# Source: https://vrom911.github.io/blog/github-actions-releases
on:
  # Trigger the workflow on the new 'v*' tag created
  push:
    tags:
      - "v*"

jobs:
  create_release:
    name: Create Github Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  build_artifact:
    needs: [create_release]
    name: ${{ matrix.os }}/GHC ${{ matrix.ghc }}/${{ github.ref }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        ghc:
          - "8.10.2"

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set tag name
        uses: olegtarasov/get-tag@v2.1
        id: tag
        with:
          tagRegex: "v(.*)"
          tagRegexGroup: 1

      - name: Setup Haskell
        uses: haskell/actions/setup@v1
        id: setup-haskell-stack
        with:
          ghc-version: ${{ matrix.ghc }} # Exact version of ghc to use
          # cabal-version: 'latest'. Omitted, but defaults to 'latest'
          enable-stack: true
          stack-version: "latest"

      - name: Cache ~/.stack
        uses: actions/cache@v2.1.3
        with:
          path: ~/.stack
          key: ${{ runner.os }}-${{ matrix.ghc }}-stack

      - name: Install dependencies
        run: |
          stack build --system-ghc --only-dependencies
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock

      - name: Build binary
        run: |
          mkdir dist
          stack build --system-ghc --copy-bins --local-bin-path dist

      - name: Set binary path name
        run: |
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
          echo "BINARY_PATH=./dist/$BINARY_NAME" >> $GITHUB_ENV
        env:
          BINARY_NAME: base-template-full-exe

      - name: Compress binary
        uses: svenstaro/upx-action@2.0.1
        with:
          file: ${{ env.BINARY_PATH }}

      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url

      - name: Get Release File Name & Upload URL
        id: get_release_info
        run: |
          echo "::set-output name=upload_url::$(cat release_url/release_url.txt)"

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ${{ env.BINARY_PATH }}
          asset_name: ${{ env.BINARY_NAME }}-${{ steps.tag.outputs.tag }}-${{ runner.os }}-ghc-${{ matrix.ghc }}
          asset_content_type: application/octet-stream
